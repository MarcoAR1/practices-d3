(function (React$1, ReactDOM, d3) {
  'use strict';

  React$1 = React$1 && Object.prototype.hasOwnProperty.call(React$1, 'default') ? React$1['default'] : React$1;
  ReactDOM = ReactDOM && Object.prototype.hasOwnProperty.call(ReactDOM, 'default') ? ReactDOM['default'] : ReactDOM;

  const BackgroundCircle = ({ radius, strokeWidth }) => (
    React.createElement( 'circle', {
      r: radius, fill: "yellow", stroke: "black", 'stroke-width': strokeWidth })
  );

  const Eyes = ({eyeOffSetX, eyeOffSetY,eyeRadius}) => {
    return (
      React.createElement( React.Fragment, null,
        React.createElement( 'circle', {
          cx: -eyeOffSetX, cy: -eyeOffSetY, r: eyeRadius }),

        React.createElement( 'circle', {
          cx: eyeOffSetX, cy: -eyeOffSetY, r: eyeRadius })
      )
    );
  };

  const Mouth = ({ mouthRadius, mouthWidth }) => {
    const mounthArc = d3.arc()
      .innerRadius(mouthRadius)
      .outerRadius(mouthRadius + mouthWidth)
      .startAngle(Math.PI / 2)
      .endAngle((Math.PI * 3) / 2);

    return React.createElement( 'path', { d: mounthArc() });
  };

  const FaceContainer = ({
    children,
    width,
    height,
    centerX,
    centerY,
  }) => {
    return (
      React.createElement( 'svg', { width: width, height: height },
        React.createElement( 'g', { transform: `translate(${centerX},${centerY})` },
          children
        )
      )
    );
  };

  const Face = ({
    width,
    height,
    centerX,
    centerY,
    strokeWidth,
    eyeRadius,
    eyeOffSetX,
    eyeOffSetY,
    mouthWidth,
    mouthRadius,
  }) => {
    return (
      React.createElement( React.Fragment, null,
        React.createElement( FaceContainer, {
          width: width, height: height, centerX: centerX, centerY: centerY },
          React.createElement( BackgroundCircle, {
            radius: centerY - strokeWidth / 2, strokeWidth: strokeWidth }),
          React.createElement( Eyes, {
            eyeRadius: eyeRadius, eyeOffSetX: eyeOffSetX, eyeOffSetY: eyeOffSetY }),
          React.createElement( Mouth, {
            mouthWidth: mouthWidth, mouthRadius: mouthRadius })
        )
      )
    );
  };

  const width = 160;
  const height = 160;
  const rang = d3.range(6*3);
  const App = () => {
    return (
      React$1.createElement( React$1.Fragment, null,
        rang.map(() => (
          React$1.createElement( Face, {
            width: width, height: height, centerX: width / 2, centerY: height / 2, strokeWidth: 10, eyeRadius: 10, eyeOffSetX: 30, eyeOffSetY: 30, mouthWidth: 10, mouthRadius: 40 })
        ))
      )
    );
  };

  const rootElement = document.getElementById('root');
  ReactDOM.render(React$1.createElement( App, null ), rootElement);

}(React, ReactDOM, d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIkJhY2tncm91bmRDaXJjbGUuanMiLCJFeWVzLmpzIiwiTW91dGguanMiLCJGYWNlQ29udGFpbmVyLmpzIiwiRmFjZS5qcyIsImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEJhY2tncm91bmRDaXJjbGUgPSAoeyByYWRpdXMsIHN0cm9rZVdpZHRoIH0pID0+IChcbiAgPGNpcmNsZVxuICAgIHI9e3JhZGl1c31cbiAgICBmaWxsPVwieWVsbG93XCJcbiAgICBzdHJva2U9XCJibGFja1wiXG4gICAgc3Ryb2tlLXdpZHRoPXtzdHJva2VXaWR0aH1cbiAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEJhY2tncm91bmRDaXJjbGU7XG4iLCJjb25zdCBFeWVzID0gKHtleWVPZmZTZXRYLCBleWVPZmZTZXRZLGV5ZVJhZGl1c30pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPGNpcmNsZVxuICAgICAgICBjeD17LWV5ZU9mZlNldFh9XG4gICAgICAgIGN5PXstZXllT2ZmU2V0WX1cbiAgICAgICAgcj17ZXllUmFkaXVzfVxuICAgICAgLz5cblxuICAgICAgPGNpcmNsZVxuICAgICAgICBjeD17ZXllT2ZmU2V0WH1cbiAgICAgICAgY3k9ey1leWVPZmZTZXRZfVxuICAgICAgICByPXtleWVSYWRpdXN9XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRXllcztcbiIsImltcG9ydCB7IGFyYyB9IGZyb20gJ2QzJztcbmNvbnN0IE1vdXRoID0gKHsgbW91dGhSYWRpdXMsIG1vdXRoV2lkdGggfSkgPT4ge1xuICBjb25zdCBtb3VudGhBcmMgPSBhcmMoKVxuICAgIC5pbm5lclJhZGl1cyhtb3V0aFJhZGl1cylcbiAgICAub3V0ZXJSYWRpdXMobW91dGhSYWRpdXMgKyBtb3V0aFdpZHRoKVxuICAgIC5zdGFydEFuZ2xlKE1hdGguUEkgLyAyKVxuICAgIC5lbmRBbmdsZSgoTWF0aC5QSSAqIDMpIC8gMik7XG5cbiAgcmV0dXJuIDxwYXRoIGQ9e21vdW50aEFyYygpfSAvPjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1vdXRoO1xuIiwiY29uc3QgRmFjZUNvbnRhaW5lciA9ICh7XG4gIGNoaWxkcmVuLFxuICB3aWR0aCxcbiAgaGVpZ2h0LFxuICBjZW50ZXJYLFxuICBjZW50ZXJZLFxufSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxzdmcgd2lkdGg9e3dpZHRofSBoZWlnaHQ9e2hlaWdodH0+XG4gICAgICA8ZyB0cmFuc2Zvcm09e2B0cmFuc2xhdGUoJHtjZW50ZXJYfSwke2NlbnRlcll9KWB9PlxuICAgICAgICB7Y2hpbGRyZW59XG4gICAgICA8L2c+XG4gICAgPC9zdmc+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBGYWNlQ29udGFpbmVyO1xuIiwiaW1wb3J0IEJhY2tncm91bmRDaXJjbGUgZnJvbSAnLi9CYWNrZ3JvdW5kQ2lyY2xlLmpzJztcbmltcG9ydCBFeWVzIGZyb20gJy4vRXllcy5qcyc7XG5pbXBvcnQgTW91dGggZnJvbSAnLi9Nb3V0aC5qcyc7XG5pbXBvcnQgRmFjZUNvbnRhaW5lciBmcm9tICcuL0ZhY2VDb250YWluZXIuanMnO1xuXG5jb25zdCBGYWNlID0gKHtcbiAgd2lkdGgsXG4gIGhlaWdodCxcbiAgY2VudGVyWCxcbiAgY2VudGVyWSxcbiAgc3Ryb2tlV2lkdGgsXG4gIGV5ZVJhZGl1cyxcbiAgZXllT2ZmU2V0WCxcbiAgZXllT2ZmU2V0WSxcbiAgbW91dGhXaWR0aCxcbiAgbW91dGhSYWRpdXMsXG59KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxGYWNlQ29udGFpbmVyXG4gICAgICAgIHdpZHRoPXt3aWR0aH1cbiAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgIGNlbnRlclg9e2NlbnRlclh9XG4gICAgICAgIGNlbnRlclk9e2NlbnRlcll9XG4gICAgICA+XG4gICAgICAgIDxCYWNrZ3JvdW5kQ2lyY2xlXG4gICAgICAgICAgcmFkaXVzPXtjZW50ZXJZIC0gc3Ryb2tlV2lkdGggLyAyfVxuICAgICAgICAgIHN0cm9rZVdpZHRoPXtzdHJva2VXaWR0aH1cbiAgICAgICAgLz5cbiAgICAgICAgPEV5ZXNcbiAgICAgICAgICBleWVSYWRpdXM9e2V5ZVJhZGl1c31cbiAgICAgICAgICBleWVPZmZTZXRYPXtleWVPZmZTZXRYfVxuICAgICAgICAgIGV5ZU9mZlNldFk9e2V5ZU9mZlNldFl9XG4gICAgICAgIC8+XG4gICAgICAgIDxNb3V0aFxuICAgICAgICAgIG1vdXRoV2lkdGg9e21vdXRoV2lkdGh9XG4gICAgICAgICAgbW91dGhSYWRpdXM9e21vdXRoUmFkaXVzfVxuICAgICAgICAvPlxuICAgICAgPC9GYWNlQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRmFjZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBGYWNlIGZyb20gJy4vRmFjZS5qcyc7XG5pbXBvcnQgeyByYW5nZSB9IGZyb20gJ2QzJztcblxuY29uc3Qgd2lkdGggPSAxNjA7XG5jb25zdCBoZWlnaHQgPSAxNjA7XG5jb25zdCByYW5nID0gcmFuZ2UoNiozKTtcbmNvbnN0IEFwcCA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge3JhbmcubWFwKCgpID0+IChcbiAgICAgICAgPEZhY2VcbiAgICAgICAgICB3aWR0aD17d2lkdGh9XG4gICAgICAgICAgaGVpZ2h0PXtoZWlnaHR9XG4gICAgICAgICAgY2VudGVyWD17d2lkdGggLyAyfVxuICAgICAgICAgIGNlbnRlclk9e2hlaWdodCAvIDJ9XG4gICAgICAgICAgc3Ryb2tlV2lkdGg9ezEwfVxuICAgICAgICAgIGV5ZVJhZGl1cz17MTB9XG4gICAgICAgICAgZXllT2ZmU2V0WD17MzB9XG4gICAgICAgICAgZXllT2ZmU2V0WT17MzB9XG4gICAgICAgICAgbW91dGhXaWR0aD17MTB9XG4gICAgICAgICAgbW91dGhSYWRpdXM9ezQwfVxuICAgICAgICAvPlxuICAgICAgKSl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5jb25zdCByb290RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290Jyk7XG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgcm9vdEVsZW1lbnQpO1xuIl0sIm5hbWVzIjpbImFyYyIsInJhbmdlIiwiUmVhY3QiXSwibWFwcGluZ3MiOiI7Ozs7OztFQUFBLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUU7RUFDakQsRUFBRTtFQUNGLElBQUksR0FBRyxNQUFPLEVBQ1YsTUFBSyxRQUFRLEVBQ2IsUUFBTyxPQUFPLEVBQ2QsZ0JBQWMsYUFBWSxDQUMxQjtFQUNKLENBQUM7O0VDUEQsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDLFVBQVUsRUFBRSxVQUFVLENBQUMsU0FBUyxDQUFDLEtBQUs7RUFDckQsRUFBRTtFQUNGLElBQUk7RUFDSixNQUFNO0VBQ04sUUFBUSxJQUFJLENBQUMsVUFBVyxFQUNoQixJQUFJLENBQUMsVUFBVyxFQUNoQixHQUFHLFdBQVU7QUFFckI7RUFDQSxNQUFNO0VBQ04sUUFBUSxJQUFJLFVBQVcsRUFDZixJQUFJLENBQUMsVUFBVyxFQUNoQixHQUFHLFdBQVUsQ0FDYjtFQUNSLEtBQU87RUFDUCxJQUFJO0VBQ0osQ0FBQzs7RUNmRCxNQUFNLEtBQUssR0FBRyxDQUFDLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxLQUFLO0VBQy9DLEVBQUUsTUFBTSxTQUFTLEdBQUdBLE1BQUcsRUFBRTtFQUN6QixLQUFLLFdBQVcsQ0FBQyxXQUFXLENBQUM7RUFDN0IsS0FBSyxXQUFXLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztFQUMxQyxLQUFLLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztFQUM1QixLQUFLLFFBQVEsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ2pDO0VBQ0EsRUFBRSxPQUFPLCtCQUFNLEdBQUcsU0FBUyxJQUFHLENBQUcsQ0FBQztFQUNsQyxDQUFDOztFQ1RELE1BQU0sYUFBYSxHQUFHLENBQUM7RUFDdkIsRUFBRSxRQUFRO0VBQ1YsRUFBRSxLQUFLO0VBQ1AsRUFBRSxNQUFNO0VBQ1IsRUFBRSxPQUFPO0VBQ1QsRUFBRSxPQUFPO0VBQ1QsQ0FBQyxLQUFLO0VBQ04sRUFBRTtFQUNGLElBQUksOEJBQUssT0FBTyxLQUFNLEVBQUMsUUFBUTtFQUMvQixNQUFNLDRCQUFHLFdBQVcsQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztFQUNyRCxRQUFTLFFBQVM7RUFDbEIsT0FBVTtFQUNWLEtBQVU7RUFDVixJQUFJO0VBQ0osQ0FBQzs7RUNURCxNQUFNLElBQUksR0FBRyxDQUFDO0VBQ2QsRUFBRSxLQUFLO0VBQ1AsRUFBRSxNQUFNO0VBQ1IsRUFBRSxPQUFPO0VBQ1QsRUFBRSxPQUFPO0VBQ1QsRUFBRSxXQUFXO0VBQ2IsRUFBRSxTQUFTO0VBQ1gsRUFBRSxVQUFVO0VBQ1osRUFBRSxVQUFVO0VBQ1osRUFBRSxVQUFVO0VBQ1osRUFBRSxXQUFXO0VBQ2IsQ0FBQyxLQUFLO0VBQ04sRUFBRTtFQUNGLElBQUk7RUFDSixNQUFNLHFCQUFDO0VBQ1AsUUFBUSxPQUFPLEtBQU0sRUFDYixRQUFRLE1BQU8sRUFDZixTQUFTLE9BQVEsRUFDakIsU0FBUztFQUVqQixRQUFRLHFCQUFDO0VBQ1QsVUFBVSxRQUFRLE9BQU8sR0FBRyxXQUFXLEdBQUcsQ0FBRSxFQUNsQyxhQUFhLGFBQVk7RUFFbkMsUUFBUSxxQkFBQztFQUNULFVBQVUsV0FBVyxTQUFVLEVBQ3JCLFlBQVksVUFBVyxFQUN2QixZQUFZLFlBQVc7RUFFakMsUUFBUSxxQkFBQztFQUNULFVBQVUsWUFBWSxVQUFXLEVBQ3ZCLGFBQWEsYUFBWSxDQUN6QjtFQUNWLE9BQXNCO0VBQ3RCLEtBQU87RUFDUCxJQUFJO0VBQ0osQ0FBQzs7RUNwQ0QsTUFBTSxLQUFLLEdBQUcsR0FBRyxDQUFDO0VBQ2xCLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQztFQUNuQixNQUFNLElBQUksR0FBR0MsUUFBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUN4QixNQUFNLEdBQUcsR0FBRyxNQUFNO0VBQ2xCLEVBQUU7RUFDRixJQUFJQztFQUNKLE1BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQztFQUNoQixRQUFRQSx1QkFBQztFQUNULFVBQVUsT0FBTyxLQUFNLEVBQ2IsUUFBUSxNQUFPLEVBQ2YsU0FBUyxLQUFLLEdBQUcsQ0FBRSxFQUNuQixTQUFTLE1BQU0sR0FBRyxDQUFFLEVBQ3BCLGFBQWEsRUFBRyxFQUNoQixXQUFXLEVBQUcsRUFDZCxZQUFZLEVBQUcsRUFDZixZQUFZLEVBQUcsRUFDZixZQUFZLEVBQUcsRUFDZixhQUFhLElBQUcsQ0FDaEI7RUFDVixPQUFPLENBQUU7RUFDVCxLQUFPO0VBQ1AsSUFBSTtFQUNKLENBQUMsQ0FBQztBQUNGO0VBQ0EsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUNwRCxRQUFRLENBQUMsTUFBTSxDQUFDQSx1QkFBQyxTQUFHLEVBQUcsRUFBRSxXQUFXLENBQUM7Ozs7In0=